version: '3.8'

services:
  # ===========================================
  # PostgreSQL Database
  # ===========================================
  postgres:
    image: postgres:15-alpine
    container_name: indicium-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: indicium
      POSTGRES_USER: indicium_user
      POSTGRES_PASSWORD: indicium_password
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --lc-collate=C --lc-ctype=C'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - '5432:5432'
    networks:
      - indicium-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U indicium_user -d indicium']
      interval: 10s
      timeout: 5s
      retries: 5

  # ===========================================
  # Redis Cache (Optional)
  # ===========================================
  redis:
    image: redis:7-alpine
    container_name: indicium-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass indicium_redis_password
    volumes:
      - redis_data:/data
    ports:
      - '6379:6379'
    networks:
      - indicium-network
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 10s
      timeout: 3s
      retries: 5

  # ===========================================
  # Indicium Backend Application
  # ===========================================
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: indicium-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 8080
      DATABASE_URL: postgresql://indicium_user:indicium_password@postgres:5432/indicium?schema=public
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      REDIS_URL: redis://:indicium_redis_password@redis:6379
    volumes:
      # Mount CSV data directory
      - ./csv-data:/app/data/csv:ro
      # Mount logs directory
      - ./logs:/app/logs
    ports:
      - '8080:8080'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - indicium-network
    healthcheck:
      test:
        [
          'CMD',
          'node',
          '-e',
          "require('http').get('http://localhost:8080/', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ===========================================
  # Development Service (Optional)
  # ===========================================
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: indicium-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 8080
      DATABASE_URL: postgresql://indicium_user:indicium_password@postgres:5432/indicium?schema=public
      JWT_SECRET: dev-jwt-secret
      JWT_REFRESH_SECRET: dev-refresh-secret
    volumes:
      # Mount source code for hot reload
      - ./src:/app/src:ro
      - ./prisma:/app/prisma:ro
      - ./csv-data:/app/data/csv:ro
      - ./logs:/app/logs
    ports:
      - '8081:8080'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - indicium-network
    profiles:
      - dev

# ===========================================
# Networks
# ===========================================
networks:
  indicium-network:
    driver: bridge
    name: indicium-network

# ===========================================
# Volumes
# ===========================================
volumes:
  postgres_data:
    name: indicium_postgres_data
  redis_data:
    name: indicium_redis_data
